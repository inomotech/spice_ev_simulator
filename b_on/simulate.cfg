# call simulate script with --help option to see all options
# call simulate script with --config option to use this file:
# python simulate.py --config examples/simulate.cfg

# set input file
input = b_on/autogen/scenario.json

# set strategy with options
strategy = balanced
# possible strategies: greedy, balanced, balanced_market, peak_shaving, peak_load_window, flex_window, schedule
strategy_option = [["LOAD_STRAT", "balanced"], ["CONCURRENCY", 1.0], ["HORIZON", 24], ["PRICE_THRESHOLD", 0.001]]
# strategy peak_load_window needs strategy option time_windows
# strategy_option = [["time_windows", "examples/data/time_windows.json"]]

# show plots after simulation
visual = true

# show estimated remaining time instead of progress bar
# WARNING: slows down fast computations
eta = true

# give margin for desired SoC [0.0 - 1.0]
# margin = 0.1 -> simulation will not abort if vehicles reach at least 90% of the desired SoC before leaving.
# margin = 1.0 -> simulation continues with every positive SoC value, but may fail if trips can not be completed.
margin = 0.2

# set flag for cost calculation:
# cost_calc = true: calculate costs
# cost_calc = false: don't calculate costs
cost_calc = true

# set price sheet file for cost calculation
cost_parameters_file = b_on/output/price_sheet.json

# generate output files with simulation data
# save_timeseries = b_on/output/simulation.csv
# save_results = b_on/output/simulation.json
# save_soc = b_on/output/simulation_soc.csv
